[build-system]
requires = [
    "setuptools>=64",
    "setuptools_scm>=8",
    "cython>=0.29.16",
    "cmake",
]
build-backend = "setuptools.build_meta"

[project]
name = "pyopenjtalk"
dynamic = ["version"]
description = "A python wrapper for OpenJTalk"
readme = "README.md"
requires-python = ">=3.10"
license.file = "LICENSE.md"
authors = [{ name = "Ryuichi Yamamoto", email = "zryuichi@gmail.com" }]
keywords = ["OpenJTalk", "Research"]
classifiers = [
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Cython",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
]
urls.Homepage = "https://github.com/r9y9/pyopenjtalk"
dependencies = [
    "tqdm",
]

[project.optional-dependencies]
docs = [
    "sphinx_rtd_theme",
    "nbsphinx>=0.8.6",
    "Jinja2>=3.0.1",
    "pandoc",
    "ipython",
    "jupyter",
]
dev = [
    "cython>=0.29.16",
    "pysen",
    "types-setuptools",
    "mypy<=0.910",
    "black>=19.19b0,<=20.8",
    "click<8.1.0",
    "flake8>=3.7,<4",
    "flake8-bugbear",
    "isort>=4.3,<5.2.0",
    "types-decorator",
    "importlib-metadata<5.0",
]
test = ["pytest"]

[tool.setuptools.packages.find]
include = ["pyopenjtalk*"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyx", "*.pxd"]

[tool.setuptools_scm]
version_file = "pyopenjtalk/version.py"
version_file_template = '''
__version__ = "{version}"
'''
# local_scheme = "no-local-version"

[tool.pysen]
version = "0.10.2"

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = false # TODO: enable mypy in the future
mypy_preset = "strict"
line_length = 88
py_version = "py38"
[[tool.pysen.lint.mypy_targets]]
  paths = ["."]

[tool.ruff]
extend-exclude = [
  "docs/conf.py", # Because this file is python-like non-standalone config.
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "E501", # line-too-long
  "COM812", # missing-trailing-comma. Because of linter-formatter conflict.
]

[tool.ruff.lint.per-file-ignores]
"tests/**/test_*.py" = [
  "D103", # undocumented-public-function. Because D103 force docstring on pytest target functions `test_*()` even if contents are apparent from name.
  "RUF001", # ambiguous-unicode-character-string. Test Japanese strings.
  "RUF002", # ambiguous-unicode-character-docstring. Test Japanese strings.
  "RUF003", # ambiguous-unicode-character-comment. Test Japanese strings.
  "S101", # assert. Assert is recommended in pytest.
]
"setup.py" = [
  "S603", # subprocess-without-shell-equals-true. Because of internal use for build.
  "S607", # start-process-with-partial-path. Because of internal use for build.
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true